{"version":3,"sources":["relmodel.js","components/RelVisualization.js","components/RelCircle.js","components/RelIntro.js","components/RelDefinition.js","components/RelTemperature.js","components/App.js","serviceWorker.js","index.js"],"names":["RelModel","length","_this","this","colorCoefficient","arguments","undefined","numDice","bitStrength","Object","classCallCheck","nodes","bits","dice","diceIndex","i","stability","color","Math","random","targets","Array","from","sum","max","j","normalize","node","entropy","forEach","t","abs","log1p","step","console","error","diceRoll","counter","push","source","target","complete","bitStep","filter","bit","bitColor","nodeColor","similarity","colorShift","RelVisualization","PropTypes","func","shape","object","string","number","arrayOf","_ref","width","height","relModel","getPosition","react_default","a","createElement","id","xmlns","xmlnsXlink","map","bitPlacement","x","y","key","style","fill","concat","cx","cy","r","_ref2","_getPosition","zIndex","RelCircle","props","possibleConstructorReturn","getPrototypeOf","call","state","numNodes","relIndex","stepTimer","bitTimer","restartTimer","bind","assertThisInitialized","n","_this$props","radius","center","sin","PI","cos","runStep","_this$state","setState","runBits","restart","_assertThisInitialize","clearInterval","setInterval","_this2","_this$props2","restartInterval","prevProps","prevState","_this$state2","_this$props3","_this$state3","styles","container","components_RelVisualization","Component","padding","RelIntro","handleSlider","e","v","components_RelCircle","sliderContainer","Slider","className","value","aria-labelledby","onChange","min","margin","RelDefinition","RelTemperature","temperature","log","forceUpdate","assign","App","pageContainer","components_RelIntro","explainer","paragraph","components_RelDefinition","components_RelTemperature","display","alignItems","flexDirection","paddingBottom","fontFamily","maxWidth","textAlign","fontStyle","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b4b5805.chunk.js","sourcesContent":["export default class RelModel {\n\n  constructor (length, colorCoefficient = .1, numDice = 1, bitStrength = 1) {\n    this.nodes = []\n    this.bits = []\n    this.dice = []\n    this.diceIndex = 0\n\n    for (var i = 0; i < length; i++) {\n      this.nodes[i] = {\n        stability: 0,\n        color: Math.random() * 360,\n        targets: Array.from({length}, () => 0.1),\n        sum: .1 * length,\n        max: .1\n      }\n    }\n\n    for (var j=0; j < numDice; j++) {\n      this.dice[j] = Math.random()\n    }\n\n    this.normalize = (node) => {\n      let sum = 0\n      node.max = 0\n      node.entropy = 0\n      node.targets.forEach(t => sum += t)\n      for (var i = 0; i < length; i++) {\n        node.targets[i] = node.targets[i]/sum\n        node.entropy += Math.abs(Math.log1p(node.targets[i]))\n        if (node.targets[i] > node.max) {\n          node.max = node.targets[i]\n        }\n      }\n    }\n\n    this.step = (i) => {\n      const node = this.nodes[i]\n      if (!node) {\n        console.error('Node not found');\n        debugger;\n      }\n\n      const diceRoll = this.diceIndex >= this.dice.length ? Math.random() : this.dice[this.diceIndex]\n      this.diceIndex++\n      var j\n      var counter = 0\n      for (j = 0; j < length - 1; j++) {\n        counter += node.targets[j]\n        if (counter > diceRoll && i !== j) {\n          break;\n        }\n      }\n      if (i===j) {\n        j = 0\n      }\n      this.bits.push({\n        source: i,\n        target: j,\n        color: node.color,\n        complete: 0\n      })\n    }\n\n    this.bitStep = () => {\n      this.bits = this.bits.filter(bit => bit.complete < 100)\n      for (var i = 0; i < this.bits.length; i++) {\n        const bit = this.bits[i]\n        bit.complete += 1\n        if (bit.complete === 100) {\n          const bitColor = bit.color\n          const nodeColor = this.nodes[bit.target].color\n          const similarity = 360 - Math.abs(bitColor - nodeColor) * colorCoefficient\n          this.nodes[bit.target].targets[bit.source] += similarity/700 * bitStrength\n          this.normalize(this.nodes[bit.target])\n\n          const colorDelta = ((Math.abs(bitColor - nodeColor) + 360) % 360)/2\n          const colorSign = bitColor > nodeColor ? 1 : -1\n\n          const colorShift = colorDelta * colorSign / 30\n          this.nodes[bit.target].color = (this.nodes[bit.target].color + colorShift) % 360\n        }\n      }\n    }\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RelVisualization = ({width, height, bits, relModel, getPosition}) => <svg id=\"visualization\"\n  width={width}\n  height={height}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n  {\n    bits.map((bit, i) => {\n      const source = getPosition(bit.source)\n      const target = getPosition(bit.target)\n      const bitPlacement = {\n        x: source.x + (target.x - source.x) * bit.complete/100,\n        y: source.y + (target.y - source.y) * bit.complete/100\n      }\n      return <circle key={'bit' + i} style={{fill:`hsl(${bit.color}, 100%, 50%)`}} cx={bitPlacement.x} cy={bitPlacement.y} r=\"2\"/>\n    })\n  }\n  {\n    relModel.nodes.map(({color, max}, i) => {\n      const {x,y} = getPosition(i)\n      return <circle key={i} style={{fill:`hsl(${color}, 100%, 50%)`, zIndex: 10}} cx={x} cy={y} r=\"10\"/>\n    })\n  }\n</svg>\n\nconst {func, shape, object, string, number, arrayOf} = PropTypes;\n\nRelVisualization.propTypes = {\n  width: number,\n  height: number,\n  bits: arrayOf(object),\n  relModel: object,\n  getPosition: func\n};\n\nexport default RelVisualization;\n","import React, {Component} from 'react'\nimport RelModel from '../relmodel'\nimport RelVisualization from './RelVisualization'\n\nclass RelCircle extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      relModel: props.relModel ? props.relModel : new RelModel(props.numNodes),\n      relIndex: 0,\n      stepTimer: null,\n      bitTimer: null,\n      restartTimer: null,\n      bits: []\n    }\n\n    this.getPosition = props.getPosition ? props.getPosition.bind(this) : (n) => {\n      const {height, width, radius, numNodes} = this.props\n      const center = {\n        x: width/2,\n        y: height/2\n      }\n      return {\n        x: Math.sin( 2 * Math.PI * n/numNodes ) * radius + center.x,\n        y: Math.cos( 2 * Math.PI * n/numNodes) * radius + center.y\n      }\n    }\n\n    this.runStep = props.runStep ? props.runStep.bind(this) : () => {\n      const {numNodes} = this.props\n      const {relModel, relIndex} = this.state\n      relModel.step(relIndex)\n      this.setState({relIndex: (relIndex + 1) % numNodes})\n    }\n\n    this.runBits = props.runBits ? props.runBits.bind(this) : () => {\n      const {relModel} = this.state\n      relModel.bitStep()\n      this.setState({bits: relModel.bits})\n    }\n\n    this.restart = props.restart ? props.restart.bind(this) : (numNodes) => {\n      const {runStep, runBits} = this\n      clearInterval(this.state.stepTimer)\n      clearInterval(this.state.bitTimer)\n      const stepTimer = setInterval(runStep, 40)\n      const bitTimer = setInterval(runBits, 20)\n      this.setState({\n        relModel: new RelModel(this.props.numNodes),\n        stepTimer,\n        bitTimer,\n        relIndex: 0,\n        bits: []})\n    }\n  }\n\n  componentDidMount() {\n    const {numNodes, restartInterval} = this.props\n    this.restart(this.props.numNodes)\n    if (restartInterval) {\n      const restartTimer = setInterval(() => this.restart(numNodes), restartInterval)\n      this.setState({restartTimer})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.numNodes !== this.props.numNodes) {\n      this.restart(this.props.numNodes)\n    }\n  }\n\n  componentWillUnmount() {\n    const {stepTimer, bitTimer, restartTimer} = this.state\n    clearInterval(stepTimer)\n    clearInterval(bitTimer)\n    clearInterval(restartTimer)\n  }\n\n  render () {\n    const {height, width} = this.props\n    const {relModel, bits} = this.state\n    return <div style={styles.container}>\n      <RelVisualization\n        width={width}\n        height={height}\n        relModel={relModel}\n        bits={bits}\n        getPosition={this.getPosition} />\n    </div>\n  }\n}\n\nexport default RelCircle;\n\nconst styles = {\n  container: {\n    padding: 20\n  }\n}\n","import React, {Component} from 'react'\nimport RelCircle from './RelCircle'\nimport Slider from '@material-ui/lab/Slider'\n\nclass RelIntro extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      numNodes: 10\n    }\n\n    this.handleSlider = (e, v) => {\n      this.setState({numNodes: v})\n    }\n  }\n\n  render () {\n    const {numNodes} = this.state\n\n    return <div>\n        <RelCircle height='350' width='350' numNodes={numNodes} radius={150}/>\n        <div style={styles.sliderContainer}>\n          <Slider\n            className='slider'\n            value={numNodes}\n            aria-labelledby=\"Number of Nodes\"\n            onChange={this.handleSlider}\n            min={2}\n            max={50}\n            step={1}\n          />\n        </div>\n      </div>\n\n  }\n}\n\nexport default RelIntro;\n\nconst styles = {\n  sliderContainer: {\n    width: 300,\n    margin: 30\n  }\n}\n","import React, {Component} from 'react'\nimport RelModel from '../relmodel'\nimport RelVisualization from './RelVisualization'\n\nclass RelDefinition extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      relModel: new RelModel(props.numNodes),\n      relIndex: 0,\n      stepTimer: null,\n      bitTimer: null,\n      restartTimer: null,\n      bits: []\n    }\n\n    this.getPosition = (n) => {\n        const {height, width, numNodes} = this.props\n        const center = {\n          x: width/2,\n          y: height/2\n        }\n\n        if (n === numNodes/4) {\n          return {\n            x: width/3,\n            y: height/2\n          }\n        } else if (n === 3 * numNodes/4) {\n          return {\n            x: 2 * width/3,\n            y: height/2\n          }\n        }\n\n        return {\n          x: Math.sin( 2 * Math.PI * n/numNodes ) * width + center.x,\n          y: Math.cos( 2 * Math.PI * n/numNodes) * width + center.y\n        }\n    }\n\n    this.runStep = () => {\n      const {numNodes} = this.props\n      const {relModel, relIndex} = this.state\n      relModel.step(numNodes/4)\n      relModel.step(3 * numNodes/4)\n    }\n\n    this.runBits = props.runBits ? props.runBits.bind(this) : () => {\n      const {relModel} = this.state\n      relModel.bitStep()\n      this.setState({bits: relModel.bits})\n    }\n\n    this.restart = () => {\n        const {runStep, runBits} = this\n        clearInterval(this.state.stepTimer)\n        clearInterval(this.state.bitTimer)\n        const stepTimer = setInterval(runStep, 250)\n        const bitTimer = setInterval(runBits, 20)\n        this.setState({\n          relModel: new RelModel(this.props.numNodes),\n          stepTimer,\n          bitTimer,\n          relIndex: 0,\n          bits: []})\n    }\n  }\n\n  componentDidMount() {\n    const {numNodes} = this.props\n    this.restart(this.props.numNodes)\n    const restartTimer = setInterval(() => this.restart(numNodes), 30000)\n    this.setState({restartTimer})\n  }\n\n  componentWillUnmount() {\n    const {stepTimer, bitTimer, restartTimer} = this.state\n    clearInterval(stepTimer)\n    clearInterval(bitTimer)\n    clearInterval(restartTimer)\n  }\n\n  render() {\n    const {height, width} = this.props\n    const {relModel, bits} = this.state\n    return <div style={styles.container}>\n      <RelVisualization\n        width={width}\n        height={height}\n        relModel={relModel}\n        bits={bits}\n        getPosition={this.getPosition} />\n    </div>\n  }\n\n}\n\nexport default RelDefinition\n\nconst styles = {\n  container: {\n    padding: 20\n  }\n}\n","import React, {Component} from 'react'\nimport RelModel from '../relmodel'\nimport RelCircle from './RelCircle'\nimport Slider from '@material-ui/lab/Slider'\n\nclass RelTemperature extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      temperature: .25\n    }\n\n    this.handleSlider = (e, v) => {\n      console.log(v);\n      this.setState({temperature: v})\n      this.forceUpdate() //Bad code smell! This is a result of trying to reuse RelCircle, and a sign that I should refactor.\n    }\n  }\n\n  getPosition(n) {\n      const {height, width, numNodes} = this.props\n      const center = {\n        x: width/2,\n        y: height/2\n      }\n\n      if (n === numNodes/4) {\n        return {\n          x: width/3,\n          y: height/2\n        }\n      } else if (n === 3 * numNodes/4) {\n        return {\n          x: 2 * width/3,\n          y: height/2\n        }\n      }\n\n      return {\n        x: Math.sin( 2 * Math.PI * n/numNodes ) * width + center.x,\n        y: Math.cos( 2 * Math.PI * n/numNodes) * width + center.y\n      }\n  }\n\n  runStep() {\n    const {numNodes, temperature} = this.props\n    const {relModel, relIndex} = this.state\n    if (Math.random() < temperature || relIndex === numNodes/4 || relIndex === 3 * numNodes/4) {\n        relModel.step(relIndex)\n        for (var i = 0; i < relModel.nodes.length; i++) {\n          if (i !== numNodes/4 && i !== 3 * numNodes/4) {\n            relModel.nodes[i].targets = Array(numNodes).fill(1/numNodes)\n            relModel.nodes[i].targets[numNodes/4]=3/numNodes\n            relModel.nodes[i].targets[3 * numNodes/4]=3/numNodes\n            relModel.normalize(relModel.nodes[i])\n            relModel.nodes[i].color = Math.random() * 360\n          }\n        }\n    }\n    this.setState({relIndex: (relIndex + 1) % numNodes})\n  }\n\n  restart() {\n      const {runStep, runBits} = this\n      clearInterval(this.state.stepTimer)\n      clearInterval(this.state.bitTimer)\n      const stepTimer = setInterval(runStep, 30)\n      const bitTimer = setInterval(runBits, 20)\n      this.setState({\n        relModel: new RelModel(this.props.numNodes),\n        stepTimer,\n        bitTimer,\n        relIndex: 0,\n        bits: []})\n  }\n\n  render() {\n    const {temperature} = this.state\n    return <div>\n      <RelCircle {...this.props}\n        relModel={new RelModel(this.props.numNodes, .1, 1, .01)}\n        getPosition={this.getPosition}\n        runStep={this.runStep}\n        restart={this.restart}\n        temperature={temperature} />\n        <Slider\n          className='temperatureSlider'\n          value={temperature}\n          aria-labelledby=\"Relational Temperature\"\n          onChange={this.handleSlider}\n          min={0}\n          max={1}\n        />\n    </div>\n  }\n\n}\n\nexport default RelTemperature\n","import React, {Component} from 'react'\nimport RelIntro from './RelIntro'\nimport RelDefinition from './RelDefinition'\nimport RelTemperature from './RelTemperature'\n\nclass App extends Component {\n\n\n\n  render () {\n    return <div style={styles.pageContainer}>\n      <div className=\"App\" style={styles.container}>\n        <h1>Relationality</h1>\n        <h3>A mathematical framework for the measurement and prediction of relationship formation.</h3>\n        <RelIntro/>\n        <div style={styles.explainer}>\n          An example of a mathematical model in which flows of information move\n          from randomness to stability.<br/>\n          Color illustrates how relational dynamics alter the state of a system\n          over time.\n        </div>\n        <h3>Why Measure and Predict Relationships?</h3>\n        <div style={styles.paragraph}>\n          In 1949 a landmark scientific paper described a mathematical framework\n          for measuring information in bits.\n          This framework allowed scientists and engineers to precisely understand\n          how information would behave regardless of what kind of information it was.\n          By figuring out how to send, store and processing bits, scientists could\n          send, store and process any kind of information.\n        </div>\n        <div style={styles.paragraph}>\n          This project seeks to create a similar mathematical framework for\n          relationships, one that will allow precise and meaningful predictions\n          to be made about relationships regardless of the kind of relationships\n          involved. The goal is not to control the outcome of relationships (in fact\n          there are hard mathematical limits to such control), but to enable richer\n          conversation about how to create environments in which relationships thrive.\n        </div>\n        <h3>What is a Relationship?</h3>\n        <div style={styles.paragraph}>\n          While relationships between humans are very different from\n          relationships between bacteria or relationships between atoms, all involve\n          <b> dynamic flows of information with the ability to stabilize over time. </b>\n          By examining the fundamental properties of such flows of information\n          it is possible to map out universal dynamics which all relationships\n          share.\n        </div>\n        <RelDefinition height='150' width='350' numNodes={20}/>\n        <div style={styles.paragraph}>\n          Relationships form when information being randomly transmitted across\n          a system finds a self-reinforcing feedback loop. These stable flows of\n          information go on to reshape the entities sending and receiving them.\n        </div>\n        <div style={styles.paragraph}>\n          However most relationships do not happen in a vacuum. New information from\n          the surrounding environment constantly disrupts stable relational states.\n          To persist, relationships must not only establish a stable flow of information,\n          but continuously re-establish that flow in response to external stress.\n          This ability to constant re-establishing of stability can be measured as\n          relationality, the negative rate of change of entropy in a system of\n          information exchange.\n        </div>\n        <RelTemperature height='150' width='350' numNodes={20} temperature={1}/>\n      </div>\n    </div>\n  }\n}\n\nexport default App\n\nconst styles = {\n  pageContainer: {\n    width: 'calc(100%-40px)',\n    padding: 20,\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    paddingBottom: 80,\n    fontFamily: 'Montserrat'\n  },\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    maxWidth: 900,\n    textAlign: 'center'\n  },\n  explainer: {\n    fontStyle: 'italic',\n    color: 'grey'\n  },\n  paragraph: {\n    fontSize: 14,\n    textAlign: 'left',\n    padding: 10\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}