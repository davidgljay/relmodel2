{"version":3,"sources":["relmodel.js","components/RelVisualization.js","components/ProbabilityGraph.js","components/EntropyGraph.js","components/RelationalityGraph.js","components/RelCircle.js","components/RelIntro.js","components/RelDefinition.js","components/RelTemperature.js","components/RelColor.js","components/DivergenceVisualization.js","components/LimitsToPrediction.js","components/App.js","serviceWorker.js","index.js"],"names":["RelModel","length","_this","this","colorCoefficient","arguments","undefined","numDice","bitStrength","colorShiftStrength","Object","classCallCheck","nodes","bits","dice","diceIndex","maxEntropy","Math","log1p","minEntropy","i","stability","color","random","targets","Array","from","sum","max","entropy","entropyDeltas","j","normalize","node","forEach","t","abs","concat","reverse","slice","map","e","step","console","error","diceRoll","counter","push","source","target","complete","bitStep","filter","bit","bitColor","nodeColor","similarity","colorShift","RelVisualization","props","possibleConstructorReturn","getPrototypeOf","call","myRef","React","createRef","state","hide","handleScroll","current","getBoundingClientRect","top","setState","window","addEventListener","_this$props","width","height","relModel","getPosition","react_default","a","createElement","ref","style","id","xmlns","xmlnsXlink","bitPlacement","x","y","key","fill","cx","cy","r","_ref","_getPosition","zIndex","Component","PropTypes","func","shape","object","string","number","arrayOf","ProbabilityGraph","_ref2","l","val","EntropyGraph","reduce","RelationalityGraph","numNodes","entropyDeltaRange","stroke","strokeWidth","points","d","join","x1","y1","x2","y2","RelCircle","relIndex","stepTimer","bitTimer","restartTimer","bind","assertThisInitialized","n","radius","center","sin","PI","cos","runStep","_this$state","runBits","restart","_assertThisInitialize","clearInterval","setInterval","_this2","_this$props2","restartInterval","prevProps","prevState","_this$state2","_this$props3","showGraphs","_this$state3","styles","container","components_RelVisualization","components_ProbabilityGraph","components_EntropyGraph","components_RelationalityGraph","padding","display","flexDirection","alignItems","RelIntro","handleSlider","v","components_RelCircle","sliderContainer","Slider","className","value","aria-labelledby","onChange","min","margin","RelDefinition","showProbabilities","IconButton","aria-label","onClick","Replay_default","fontSize","text","href","marginTop","marginBottom","textAlign","RelTemperature","temperature","log","_this$state4","RelColor","DivergenceVisualization","divergence","name1","name2","LimitsToPrediction","relModel1","relModel2","relIndex1","relIndex2","bits1","bits2","getDivergence","JSON","parse","stringify","_this$state5","components_DivergenceVisualization","visWrapper","vis","flexWrap","App","pageContainer","components_RelIntro","explainer","paragraph","components_RelDefinition","components_RelColor","components_RelTemperature","components_LimitsToPrediction","paddingBottom","fontFamily","maxWidth","fontStyle","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a6c5bd2.chunk.js","sourcesContent":["export default class RelModel {\n\n  constructor (length, colorCoefficient = .1, numDice = 1, bitStrength = 2, colorShiftStrength = 1) {\n    this.nodes = []\n    this.bits = []\n    this.dice = []\n    this.diceIndex = 0\n    this.maxEntropy = Math.log1p(1/length) * length ^ 2\n    this.minEntropy = Math.log1p(1) * length\n\n    for (var i = 0; i < length; i++) {\n      this.nodes[i] = {\n        stability: 0,\n        color: Math.random() * 360,\n        targets: Array.from({length}, () => 1/length),\n        sum: .1 * length,\n        max: .1,\n        entropy: [],\n        entropyDeltas: []\n      }\n    }\n\n    for (var j=0; j < numDice; j++) {\n      this.dice[j] = Math.random()\n    }\n\n    this.normalize = (node) => {\n      let sum = 0\n      node.max = 0\n      let entropy = 0\n      node.targets.forEach(t => sum += t)\n      for (var i = 0; i < length; i++) {\n        node.targets[i] = node.targets[i]/sum\n        entropy += Math.abs(Math.log1p(node.targets[i]))\n        if (node.targets[i] > node.max) {\n          node.max = node.targets[i]\n        }\n      }\n      node.entropy = node.entropy.concat(entropy).reverse().slice(0,200).reverse()\n      node.entropyDeltas = node.entropy.map(\n        (e, i) => i > 4\n        ? e - node.entropy[i-4]\n        : 0\n      ).slice(4, 200)\n    }\n\n    this.step = (i) => {\n      const node = this.nodes[i]\n      if (!node) {\n        console.error('Node not found');\n        debugger;\n      }\n\n      const diceRoll = this.diceIndex >= this.dice.length ? Math.random() : this.dice[this.diceIndex]\n      this.diceIndex++\n      var j\n      var counter = 0\n      for (j = 0; j < length - 1; j++) {\n        counter += node.targets[j]\n        if (counter > diceRoll && i !== j) {\n          break;\n        }\n      }\n      if (i===j) {\n        j = 0\n      }\n      this.bits.push({\n        source: i,\n        target: j,\n        color: node.color,\n        complete: 0\n      })\n\n      this.normalize(this.nodes[i])\n    }\n\n    this.bitStep = () => {\n      this.bits = this.bits.filter(bit => bit.complete < 100)\n      for (var i = 0; i < this.bits.length; i++) {\n        const bit = this.bits[i]\n        bit.complete += 1\n        if (bit.complete === 100) {\n          const bitColor = bit.color\n          const nodeColor = this.nodes[bit.target].color\n          const similarity = (360 - Math.abs(bitColor - nodeColor)) * colorCoefficient\n          this.nodes[bit.target].targets[bit.source] += similarity/700 * bitStrength\n          this.normalize(this.nodes[bit.target])\n\n          const colorDelta = ((Math.abs(bitColor - nodeColor) + 360) % 360)/2\n          const colorSign = bitColor > nodeColor ? 1 : -1\n\n          const colorShift = colorDelta * colorSign / 30\n          this.nodes[bit.target].color = (this.nodes[bit.target].color + colorShift * colorShiftStrength) % 360\n        }\n      }\n    }\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass RelVisualization extends Component {\n\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef()\n    this.state={\n      hide: false\n    }\n\n    this.handleScroll = () => {\n      if (this.myRef.current.getBoundingClientRect().top < -200 || this.myRef.current.getBoundingClientRect().top > 1500) {\n        this.setState({hide: true})\n      } else {\n        this.setState({hide: false})\n      }\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll)\n  }\n\n  render() {\n    const {width, height, bits, relModel, getPosition, entropy = []} = this.props\n    const {hide} = this.state\n    return <div ref={this.myRef}>\n    {\n      hide\n      ? <div style={{width, height}} />\n      : <svg id=\"visualization\"\n          width={width}\n          height={height}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n          {\n            bits.map((bit, i) => {\n              const source = getPosition(bit.source)\n              const target = getPosition(bit.target)\n              const bitPlacement = {\n                x: source.x + (target.x - source.x) * bit.complete/100,\n                y: source.y + (target.y - source.y) * bit.complete/100\n              }\n              return <circle key={'bit' + i} style={{fill:`hsl(${bit.color}, 100%, 50%)`}} cx={bitPlacement.x} cy={bitPlacement.y} r=\"2\"/>\n            })\n          }\n          {\n            relModel.nodes.map(({color, max}, i) => {\n              const {x,y} = getPosition(i)\n              return <circle key={i} style={{fill:`hsl(${color}, 100%, 50%)`, zIndex: 10}} cx={x} cy={y} r=\"10\"/>\n            })\n          }\n        </svg>\n      }\n    </div>\n  }\n}\n\nconst {func, shape, object, string, number, arrayOf} = PropTypes;\n\nRelVisualization.propTypes = {\n  width: number,\n  height: number,\n  bits: arrayOf(object),\n  relModel: object,\n  getPosition: func\n};\n\nexport default RelVisualization;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProbabilityGraph = ({width, height, nodes}) => <svg id=\"probabilities\"\n  width={width}\n  height={height}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n  {\n    nodes.map(({color, targets}, i) => {\n      const l = targets.length\n      return targets.map((val, j) =>\n        <rect\n          key={`${i}-${j}`}\n          style={{fill:`hsl(${color}, 100%, 50%)`}}\n          x={j * width/l + 10}\n          y={50 * i + 55 - val * 50}\n          width={width / (3*l) - 2}\n          height={val * 50}\n          />\n      )\n    })\n  }\n</svg>\n\nconst {func, shape, object, string, number, arrayOf} = PropTypes;\n\nProbabilityGraph.propTypes = {\n  width: number,\n  height: number,\n  bits: arrayOf(object),\n  relModel: object,\n  getPosition: func\n};\n\nexport default ProbabilityGraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EntropyGraph = ({width, height, nodes}) => <svg id=\"probabilities\"\n  width={width}\n  height={height}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n  {\n    nodes.map(({color, targets}, i) => {\n      const l = targets.length\n      const entropy = targets.reduce((sum, t) => sum + Math.log1p(t), 0)\n      const maxEntropy = l * Math.log1p(1/l)\n      const minEntropy = Math.log1p(1)\n      return <rect\n          key={`${i}`}\n          style={{fill:`hsl(${color}, 100%, 50%)`}}\n          x={0}\n          y={25 * i}\n          width={(1 - (entropy - minEntropy) / (maxEntropy - minEntropy)) * width }\n          height={20}\n          />\n    })\n  }\n</svg>\n\nconst {func, shape, object, string, number, arrayOf} = PropTypes;\n\nEntropyGraph.propTypes = {\n  width: number,\n  height: number,\n  nodes: arrayOf(number)\n};\n\nexport default EntropyGraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RelationalityGraph = ({width, height, entropy, nodes, numNodes}) => <svg id=\"probabilities\"\n  width={width}\n  height={height}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n  {\n    nodes.map(({color, entropyDeltas}, i) => {\n      const entropyDeltaRange = numNodes * Math.log1p(1/numNodes) - Math.log1p(1)\n      return <svg>\n          <polyline\n          key={`${i}`}\n          style={{stroke:`hsl(${color}, 100%, 50%)`, strokeWidth:1, fill:'none'}}\n          x={0}\n          y={25 * i}\n          points={entropyDeltas.map((d, j) => `${j * width / 200},${d/entropyDeltaRange* 80 + 10 + i * 25}`).join(' ')}\n          />\n          <line\n            key={`base${i}`}\n            style={{stroke:`lightgrey`, strokeWidth:1, fill:'none'}}\n            x1={0}\n            y1={25 * (i + .45)}\n            x2={width - 5}\n            y2={25 * (i + .45)} />\n        </svg>\n\n    })\n  }\n</svg>\n\nconst {func, shape, object, string, number, arrayOf} = PropTypes;\n\nRelationalityGraph.propTypes = {\n  width: number,\n  height: number,\n  nodes: arrayOf(object)\n};\n\nexport default RelationalityGraph;\n","import React, {Component} from 'react'\nimport RelModel from '../relmodel'\nimport RelVisualization from './RelVisualization'\nimport ProbabilityGraph from './ProbabilityGraph'\nimport EntropyGraph from './EntropyGraph'\nimport RelationalityGraph from './RelationalityGraph'\n\nclass RelCircle extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      relModel: new RelModel(props.numNodes),\n      relIndex: 0,\n      stepTimer: null,\n      bitTimer: null,\n      restartTimer: null,\n      bits: []\n    }\n\n    this.getPosition = props.getPosition ? props.getPosition.bind(this) : (n) => {\n      const {height, width, radius, numNodes} = this.props\n      const center = {\n        x: width/2,\n        y: height/2\n      }\n      return {\n        x: Math.sin( 2 * Math.PI * n/numNodes ) * radius + center.x,\n        y: Math.cos( 2 * Math.PI * n/numNodes) * radius + center.y\n      }\n    }\n\n    this.runStep = () => {\n      const {numNodes} = this.props\n      const {relModel, relIndex} = this.state\n      relModel.step(relIndex)\n      this.setState({relIndex: (relIndex + 1) % numNodes})\n    }\n\n    this.runBits = () => {\n      const {relModel} = this.state\n      relModel.bitStep()\n      this.setState({bits: relModel.bits})\n    }\n\n    this.restart = (numNodes) => {\n      const {runStep, runBits} = this\n      clearInterval(this.state.stepTimer)\n      clearInterval(this.state.bitTimer)\n      const stepTimer = setInterval(runStep, 40)\n      const bitTimer = setInterval(runBits, 20)\n      this.setState({\n        relModel: new RelModel(this.props.numNodes),\n        stepTimer,\n        bitTimer,\n        relIndex: 0,\n        bits: []})\n    }\n  }\n\n  componentDidMount() {\n    const {numNodes, restartInterval} = this.props\n    this.restart(this.props.numNodes)\n    if (restartInterval) {\n      const restartTimer = setInterval(() => this.restart(numNodes), restartInterval)\n      this.setState({restartTimer})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.numNodes !== this.props.numNodes) {\n      this.restart(this.props.numNodes)\n    }\n  }\n\n  componentWillUnmount() {\n    const {stepTimer, bitTimer, restartTimer} = this.state\n    clearInterval(stepTimer)\n    clearInterval(bitTimer)\n    clearInterval(restartTimer)\n  }\n\n  render () {\n    const {height, width, numNodes, showGraphs} = this.props\n    const {relModel, bits} = this.state\n    return <div style={styles.container}>\n      <RelVisualization\n        width={width}\n        height={height}\n        relModel={relModel}\n        bits={bits}\n        getPosition={this.getPosition} />\n        {\n          showGraphs &&\n            <ProbabilityGraph\n              width={width}\n              height={numNodes * 55}\n              nodes={relModel.nodes} />\n        }\n        {\n          showGraphs &&\n          <EntropyGraph\n            width={width}\n            height={numNodes * 25}\n            nodes={relModel.nodes} />\n        }\n        {\n          showGraphs &&\n          <RelationalityGraph\n            width={width}\n            height={numNodes * 25}\n            nodes={relModel.nodes}\n            numNodes={numNodes} />\n        }\n      </div>\n  }\n}\n\nexport default RelCircle;\n\nconst styles = {\n  container: {\n    padding: 20,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}\n","import React, {Component} from 'react'\nimport RelCircle from './RelCircle'\nimport Slider from '@material-ui/lab/Slider'\n\nclass RelIntro extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      numNodes: 10\n    }\n\n    this.handleSlider = (e, v) => {\n      this.setState({numNodes: v})\n    }\n  }\n\n  render () {\n    const {numNodes} = this.state\n\n    return <div>\n        <RelCircle height={350} width={300} numNodes={numNodes} radius={120}/>\n        <div style={styles.sliderContainer}>\n          <Slider\n            className='slider'\n            value={numNodes}\n            aria-labelledby=\"Number of Nodes\"\n            onChange={this.handleSlider}\n            min={2}\n            max={50}\n            step={1} />\n        </div>\n      </div>\n\n  }\n}\n\nexport default RelIntro;\n\nconst styles = {\n  sliderContainer: {\n    width: 300,\n    margin: 30\n  }\n}\n","import React, {Component} from 'react'\nimport RelModel from '../relmodel'\nimport ProbabilityGraph from './ProbabilityGraph'\nimport RelVisualization from './RelVisualization'\nimport EntropyGraph from './EntropyGraph'\nimport RelationalityGraph from './RelationalityGraph'\nimport IconButton from '@material-ui/core/IconButton'\nimport ReplayIcon from '@material-ui/icons/Replay'\n\nclass RelDefinition extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      relModel: new RelModel(props.numNodes),\n      relIndex: 0,\n      stepTimer: null,\n      bitTimer: null,\n      restartTimer: null,\n      bits: [],\n      entropy: []\n    }\n\n    this.getPosition = (n) => {\n        const {height, width, numNodes} = this.props\n        const center = {\n          x: width/2,\n          y: height/2\n        }\n\n        if (n === numNodes/4) {\n          return {\n            x: width/3,\n            y: height/2\n          }\n        } else if (n === 3 * numNodes/4) {\n          return {\n            x: 2 * width/3,\n            y: height/2\n          }\n        }\n\n        return {\n          x: Math.sin( 2 * Math.PI * n/numNodes ) * width + center.x,\n          y: Math.cos( 2 * Math.PI * n/numNodes) * width + center.y\n        }\n    }\n\n    this.runStep = () => {\n      const {numNodes, width} = this.props\n      const {relModel, relIndex} = this.state\n      relModel.step(numNodes/4)\n      relModel.step(3 * numNodes/4)\n    }\n\n    this.runBits = props.runBits ? props.runBits.bind(this) : () => {\n      const {relModel} = this.state\n      relModel.bitStep()\n      this.setState({bits: relModel.bits})\n    }\n\n    this.restart = () => {\n        const {runStep, runBits} = this\n        clearInterval(this.state.stepTimer)\n        clearInterval(this.state.bitTimer)\n        const stepTimer = setInterval(runStep, 250)\n        const bitTimer = setInterval(runBits, 20)\n        this.setState({\n          relModel: new RelModel(this.props.numNodes),\n          stepTimer,\n          bitTimer,\n          relIndex: 0,\n          bits: []})\n    }\n  }\n\n  componentDidMount() {\n    const {numNodes} = this.props\n    this.restart(this.props.numNodes)\n  }\n\n  componentWillUnmount() {\n    const {stepTimer, bitTimer, restartTimer} = this.state\n    clearInterval(stepTimer)\n    clearInterval(bitTimer)\n    clearInterval(restartTimer)\n  }\n\n  render() {\n    const {height, width, showProbabilities, numNodes} = this.props\n    const {relModel, bits, entropy} = this.state\n    return <div style={styles.container}>\n      <RelVisualization\n        width={width}\n        height={height}\n        relModel={relModel}\n        bits={bits}\n        getPosition={this.getPosition}\n        entropy={entropy} />\n        <IconButton aria-label=\"Restart\" onClick={this.restart}>\n          <ReplayIcon fontSize=\"medium\" />\n        </IconButton>\n      {\n        showProbabilities &&\n        <div>\n          <div style={styles.text}>\n            As relationships form, the probability distributions within a system become more stable.\n          </div>\n          <ProbabilityGraph\n            width={width}\n            height={110}\n            nodes={[relModel.nodes[numNodes/4], relModel.nodes[3 * numNodes/4]]} />\n          <div style={styles.text}>\n            A variable called <a href=\"https://en.wikipedia.org/wiki/Entropy\">entropy</a> measures the randomness of these probability distrubutions,\n            by inverting it we get a nice number that goes up as nodes in the system become more stable.\n          </div>\n          <EntropyGraph\n            width={width}\n            height={50}\n            nodes={[relModel.nodes[numNodes/4], relModel.nodes[3 * numNodes/4]]} />\n          <div style={styles.text}>\n            It can also be helpful to examine how quickly a system forms stable relationships.\n            This \"speed of relationship\" is what we will call \"relationality.\"\n          </div>\n          <RelationalityGraph\n            width={width}\n            height={50}\n            nodes={[relModel.nodes[numNodes/4], relModel.nodes[3 * numNodes/4]]}\n            numNodes={relModel.nodes.length} />\n          <div style={styles.text}>\n            Examining the relationality of a system can give insight into how it\n            will behave. Some systems are more relational than others (they have a greater)\n            \"speed of relationship\". With enough knowledge, one can intervene\n            in systems to make them more or less relational. But there are limits.\n          </div>\n        </div>\n      }\n    </div>\n  }\n\n}\n\nexport default RelDefinition\n\nconst styles = {\n  container: {\n    padding: 20,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  text: {\n    marginTop: 20,\n    marginBottom: 10,\n    fontSize: 14,\n    textAlign: 'left'\n  }\n}\n","import React, {Component} from 'react'\nimport RelModel from '../relmodel'\nimport RelVisualization from './RelVisualization'\nimport Slider from '@material-ui/lab/Slider'\n\nclass RelTemperature extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      temperature: .25,\n      relModel: new RelModel(props.numNodes),\n      relIndex: 0,\n      stepTimer: null,\n      bitTimer: null,\n      restartTimer: null,\n      bits: []\n    }\n\n    this.handleSlider = (e, v) => {\n      this.setState({temperature: v})\n      console.log(v);\n    }\n\n    this.getPosition = n => {\n      const {height, width, numNodes} = this.props\n      const center = {\n        x: width/2,\n        y: height/2\n      }\n\n      if (n === numNodes/4) {\n        return {\n          x: width/3,\n          y: height/2\n        }\n      } else if (n === 3 * numNodes/4) {\n        return {\n          x: 2 * width/3,\n          y: height/2\n        }\n      }\n\n      return {\n        x: Math.sin( 2 * Math.PI * n/numNodes ) * width + center.x,\n        y: Math.cos( 2 * Math.PI * n/numNodes) * width + center.y\n      }\n    }\n\n    this.runStep = () => {\n      const {numNodes} = this.props\n      const {relModel, relIndex, temperature} = this.state\n      if (Math.random() < temperature || relIndex === numNodes/4 || relIndex === 3 * numNodes/4) {\n          relModel.step(relIndex)\n          for (var i = 0; i < relModel.nodes.length; i++) {\n            if (i !== numNodes/4 && i !== 3 * numNodes/4) {\n              relModel.nodes[i].targets = Array(numNodes).fill(1/numNodes)\n              relModel.nodes[i].targets[numNodes/4]=3/numNodes\n              relModel.nodes[i].targets[3 * numNodes/4]=3/numNodes\n              relModel.normalize(relModel.nodes[i])\n              relModel.nodes[i].color = Math.random() * 360\n            }\n          }\n      }\n      this.setState({relIndex: (relIndex + 1) % numNodes})\n    }\n\n    this.runBits = () => {\n      const {relModel} = this.state\n      relModel.bitStep()\n      this.setState({bits: relModel.bits})\n    }\n\n    this.restart = () => {\n        const {runStep, runBits} = this\n        clearInterval(this.state.stepTimer)\n        clearInterval(this.state.bitTimer)\n        const stepTimer = setInterval(runStep, 30)\n        const bitTimer = setInterval(runBits, 20)\n        this.setState({\n          relModel: new RelModel(this.props.numNodes),\n          stepTimer,\n          bitTimer,\n          relIndex: 0,\n          bits: []})\n    }\n  }\n\n  componentDidMount() {\n    const {numNodes} = this.props\n    this.restart(numNodes)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {temperature, stepTimer} = this.state\n    if (prevState.temperature !== temperature) {\n      clearInterval(this.state.stepTimer)\n      const stepTimer = setInterval(this.runStep, 30)\n      this.setState({stepTimer})\n    }\n\n  }\n\n  componentWillUnmount() {\n    const {stepTimer, bitTimer, restartTimer} = this.state\n    clearInterval(stepTimer)\n    clearInterval(bitTimer)\n  }\n\n  render() {\n    const {width, height} = this.props\n    const {temperature, bits, relModel} = this.state\n    return <div>\n        <RelVisualization\n          width={width}\n          height={height}\n          relModel={relModel}\n          bits={bits}\n          getPosition={this.getPosition} />\n        <Slider\n          className='temperatureSlider'\n          value={temperature}\n          aria-labelledby=\"Relational Temperature\"\n          onChange={this.handleSlider}\n          min={0}\n          max={1}\n        />\n    </div>\n  }\n\n}\n\nexport default RelTemperature\n","import React, {Component} from 'react'\nimport RelModel from '../relmodel'\nimport RelVisualization from './RelVisualization'\nimport IconButton from '@material-ui/core/IconButton'\nimport ReplayIcon from '@material-ui/icons/Replay'\n\nclass RelColor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      relModel: new RelModel(4, 1),\n      relIndex: 0,\n      stepTimer: null,\n      bitTimer: null,\n      restartTimer: null,\n      bits: []\n    }\n\n    this.getPosition = (n) => {\n      const {height, width, radius} = this.props\n      const center = {\n        x: width/2,\n        y: height/2\n      }\n      return {\n        x: Math.sin( 2 * Math.PI * n/4 ) * radius + center.x,\n        y: Math.cos( 2 * Math.PI * n/4) * radius + center.y\n      }\n    }\n\n    this.runStep = () => {\n      const {relModel, relIndex} = this.state\n      relModel.step(relIndex)\n      this.setState({relIndex: (relIndex + 1) % 4})\n    }\n\n    this.runBits = () => {\n      const {relModel} = this.state\n      relModel.bitStep()\n      this.setState({bits: relModel.bits})\n    }\n\n    this.restart = () => {\n      const {runStep, runBits} = this\n      clearInterval(this.state.stepTimer)\n      clearInterval(this.state.bitTimer)\n      const stepTimer = setInterval(runStep, 100)\n      const bitTimer = setInterval(runBits, 20)\n      this.setState(() => {\n        const relModel = new RelModel(4, .1, 1, 1, .1)\n        relModel.nodes[0].color = 100\n        relModel.nodes[1].color = 100\n        relModel.nodes[2].color = 300\n        relModel.nodes[3].color = 300\n        return {\n          relModel,\n          stepTimer,\n          bitTimer,\n          relIndex: 0,\n          bits: []\n        }\n      })\n    }\n  }\n\n  componentDidMount() {\n    const {restartInterval} = this.props\n    this.restart()\n    if (restartInterval) {\n      const restartTimer = setInterval(() => this.restart(), restartInterval)\n      this.setState({restartTimer})\n    }\n  }\n\n  componentWillUnmount() {\n    const {stepTimer, bitTimer, restartTimer} = this.state\n    clearInterval(stepTimer)\n    clearInterval(bitTimer)\n    clearInterval(restartTimer)\n  }\n\n  render () {\n    const {height, width} = this.props\n    const {relModel, bits} = this.state\n    return <div style={styles.container}>\n      <RelVisualization\n        width={width}\n        height={height}\n        relModel={relModel}\n        bits={bits}\n        getPosition={this.getPosition} />\n        <IconButton aria-label=\"Restart\" onClick={this.restart}>\n          <ReplayIcon fontSize=\"medium\" />\n        </IconButton>\n    </div>\n  }\n}\n\nexport default RelColor;\n\nconst styles = {\n  container: {\n    padding: 20,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DivergenceVisualization = ({divergence, max, name1, name2, width, height}) =>  <svg id=\"divergence\"\n  width={width}\n  height={height}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n  <circle style={{fill:`green`, zIndex: 10}} cx={width/2 - divergence/max * width/2} cy={height/2} r=\"5\"/>\n  <text x={width/2 - divergence/max * width/2 - 25} y={height/2 + 22}>{name1}</text>\n  <circle style={{fill:`blue`, zIndex: 10}} cx={width/2 + divergence/max * width/2} cy={height/2} r=\"5\"/>\n  <text x={width/2 + divergence/max * width/2 - 25} y={height/2 + 22}>{name2}</text>\n</svg>\n\n\nexport default DivergenceVisualization;\n\nconst styles = {\n\n};\n","import React, {Component} from 'react'\nimport RelModel from '../relmodel'\nimport RelVisualization from './RelVisualization'\nimport ProbabilityGraph from './ProbabilityGraph'\nimport EntropyGraph from './EntropyGraph'\nimport RelationalityGraph from './RelationalityGraph'\nimport DivergenceVisualization from './DivergenceVisualization'\nimport IconButton from '@material-ui/core/IconButton'\nimport ReplayIcon from '@material-ui/icons/Replay'\n\n\nclass LimitsToPrediction extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      relModel1: new RelModel(props.numNodes),\n      relModel2: new RelModel(props.numNodes),\n      relIndex1: 0,\n      relIndex2: 0,\n      stepTimer: null,\n      bitTimer: null,\n      restartTimer: null,\n      bits1: [],\n      bits2: [],\n      divergence: 0\n    }\n\n    this.getPosition = (n) => {\n      const {height, width, radius, numNodes} = this.props\n      const center = {\n        x: width/2,\n        y: height/2\n      }\n      return {\n        x: Math.sin( 2 * Math.PI * n/numNodes ) * radius + center.x,\n        y: Math.cos( 2 * Math.PI * n/numNodes) * radius + center.y\n      }\n    }\n\n    this.getDivergence = () => {\n      const {numNodes} = this.props\n      const {relModel1, relModel2} = this.state\n      var divergence = 0\n      for (var i = 0; i < numNodes; i++) {\n        for (var j = 0; j < numNodes; j++) {\n          if (relModel1.nodes[i].targets[j] !== relModel2.nodes[i].targets[j]) {\n            divergence += Math.abs(relModel1.nodes[i].targets[j] - relModel2.nodes[i].targets[j])\n          }\n        }\n      }\n      return divergence\n    }\n\n    this.runStep = () => {\n      const {numNodes} = this.props\n      const {relModel1, relModel2, relIndex1, relIndex2} = this.state\n      relModel1.step(relIndex1)\n      relModel2.step(relIndex2)\n      this.setState({\n        relIndex1: (relIndex1 + 1) % numNodes,\n        relIndex2: (relIndex2 + 1) % numNodes,\n        divergence: this.getDivergence()\n      })\n    }\n\n    this.runBits = () => {\n      const {relModel1, relModel2} = this.state\n      relModel1.bitStep()\n      relModel2.bitStep()\n      this.setState({bits1: relModel1.bits, bits2: relModel2.bits})\n    }\n\n    this.restart = (numNodes) => {\n      const {runStep, runBits} = this\n      clearInterval(this.state.stepTimer)\n      clearInterval(this.state.bitTimer)\n      const stepTimer = setInterval(runStep, 40)\n      const bitTimer = setInterval(runBits, 20)\n      const relModel1 = new RelModel(this.props.numNodes, .1, 1000000)\n      const relModel2 = new RelModel(this.props.numNodes)\n      relModel2.dice = relModel1.dice.slice(0)\n      relModel2.nodes = JSON.parse(JSON.stringify(relModel1.nodes))\n      relModel2.nodes[0].targets[1] = relModel2.nodes[0].targets[1] * 3\n      this.setState({\n        relModel1,\n        relModel2,\n        stepTimer,\n        bitTimer,\n        relIndex: 0,\n        bits1: [],\n        bits2: []\n      })\n    }\n  }\n\n  componentDidMount() {\n    const {numNodes, restartInterval} = this.props\n    this.restart(this.props.numNodes)\n    if (restartInterval) {\n      const restartTimer = setInterval(() => this.restart(numNodes), restartInterval)\n      this.setState({restartTimer})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.numNodes !== this.props.numNodes) {\n      this.restart(this.props.numNodes)\n    }\n  }\n\n  componentWillUnmount() {\n    const {stepTimer, bitTimer, restartTimer} = this.state\n    clearInterval(stepTimer)\n    clearInterval(bitTimer)\n    clearInterval(restartTimer)\n  }\n\n  render () {\n    const {height, width, numNodes, showGraphs} = this.props\n    const {relModel1, relModel2, bits1, bits2, divergence} = this.state\n    return <div style={styles.container}>\n      <DivergenceVisualization\n        divergence={divergence}\n        max={30}\n        width={width}\n        height={50}\n        name1={'Reality'}\n        name2={'Model'} />\n        <div style={styles.visWrapper}>\n          <div style={styles.vis}>\n          <RelVisualization\n            width={width}\n            height={height}\n            relModel={relModel1}\n            bits={bits1}\n            getPosition={this.getPosition} />\n            Reality\n          </div>\n          <div style={styles.vis}>\n          <RelVisualization\n            width={width}\n            height={height}\n            relModel={relModel2}\n            bits={bits2}\n            getPosition={this.getPosition} />\n            Model\n          </div>\n        </div>\n        <IconButton aria-label=\"Restart\" onClick={this.restart}>\n          <ReplayIcon fontSize=\"medium\" />\n        </IconButton>\n      </div>\n  }\n}\n\nexport default LimitsToPrediction;\n\nconst styles = {\n  container: {\n    padding: 20,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  visWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  vis: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}\n","import React, {Component} from 'react'\nimport RelIntro from './RelIntro'\nimport RelDefinition from './RelDefinition'\nimport RelTemperature from './RelTemperature'\nimport RelColor from './RelColor'\nimport LimitsToPrediction from './LimitsToPrediction'\n\nclass App extends Component {\n\n\n\n  render () {\n    return <div style={styles.pageContainer}>\n      <div className=\"App\" style={styles.container}>\n        <h1>Relationality</h1>\n        <h3>A mathematical framework for the measurement and prediction of relationship formation.</h3>\n        <RelIntro/>\n        <div style={styles.explainer}>\n          An example of a mathematical model in which flows of information move\n          from randomness to stability.<br/>\n          Color illustrates how relational dynamics alter the state of a system\n          over time.\n        </div>\n        <h3>Why Measure and Predict Relationships?</h3>\n        <div style={styles.paragraph}>\n          In 1949 a landmark scientific paper described a mathematical framework\n          for measuring information in bits.\n          This framework allowed scientists and engineers to precisely understand\n          how information would behave regardless of what kind of information it was.\n          By figuring out how to send, store and processing bits, scientists could\n          send, store and process any kind of information.\n        </div>\n        <div style={styles.paragraph}>\n          This project seeks to create a similar mathematical framework for\n          relationships, one that will allow precise and meaningful predictions\n          to be made about relationships regardless of the kind of relationships\n          involved. The goal is not to control the outcome of relationships (in fact\n          there are hard mathematical limits to such control), but to enable richer\n          conversation about how to create environments in which relationships thrive.\n        </div>\n        <h3>What is a Relationship?</h3>\n        <div style={styles.paragraph}>\n          While relationships between humans are very different from\n          relationships between bacteria or relationships between atoms, all involve\n          <b> dynamic flows of information with the ability to stabilize over time. </b>\n          By examining the fundamental properties of such flows of information\n          it is possible to map out universal dynamics which all relationships\n          share.\n        </div>\n        <h4>Relationships Move From Chaos To Stability</h4>\n        <RelDefinition height={150} width={300} numNodes={20}/>\n        <div style={styles.paragraph}>\n          Relationships form when information being randomly transmitted across\n          a system finds a self-reinforcing feedback loop. These stable flows of\n          information go on to reshape the entities sending and receiving them.\n        </div>\n        <h4>Some Relationships Are More Likely To Form Than Others</h4>\n        <RelColor height={200} width={200} radius={70}/>\n        <div style={styles.paragraph}>\n          Different kinds of information will have different impacts on a system.\n          Information which changes how something behaves (that is, changes how it sends\n          its own information out to the world) is more likely to result in a relationship\n          than information which doesn't.\n        </div>\n        <h4>Relationship Often Form In A Noisy Environment</h4>\n        <RelTemperature height={150} width={300} numNodes={20}/>\n        <div style={styles.paragraph}>\n          Most relationships do not happen in a vacuum. New information from\n          the surrounding environment constantly disrupts stable relational states.\n          To persist, relationships must not only establish a stable flow of information,\n          but continuously re-establish that flow in response to external stress.\n        </div>\n\n        <h3>How Can We Measure Relationships?</h3>\n        <div style={styles.paragraph}>\n          A metric can never capture the full complexity of a relationship the way\n          that a series of bits can never fully capture a the experience of listening to music.\n          But relational measurement can help us to make sense of relationships and\n          facilitate their growth.\n        </div>\n        <h4>We Measure Relationships By Measuring How Order Emerges From Disorder</h4>\n        <RelDefinition height={150} width={300} numNodes={20} showProbabilities/>\n        <h4>Are Relationships Predictable?</h4>\n        <div style={styles.paragraph}>\n          There are significant limits to what we can predict about relationships.\n          In order to predict something you need to construct a predictive model\n          of how it works, calibrate your model to match reality, then run the model\n          forward in time to see what will happen.\n        </div>\n        <div style={styles.paragraph}>\n          Let's do that here. We'll create two relational models: one that represents reality,\n          and another that represents our predictive model. We'll assume that we're super smart\n          and that our predictive model perfectly measures reality. We'll also assume that we're\n          very well informed, and that our predictive model matches reality with 99.9% accuracy.\n          What happens?\n        </div>\n        <LimitsToPrediction numNodes={20} height={300} width={300} radius={120}/>\n        <div style={styles.paragraph}>\n          The near-perfect predictive model rapidly diverges from reality, settles in a\n          stable and somewhat similar place, then continues to slowly drift. Some version\n          of this behavior happens in all relational systems: tiny deviations between a predictive\n          model and reality compound, causing predictions to become less and less accurate.\n          This effect becomes significantly worse when systems are highly relational\n          and when you try to predict them over long time horizons.\n        </div>\n        <div style={styles.paragraph}>\n          As a rule of thumb: <b>relationality + time = unpredictability</b>. It doesn't\n          matter how smart your algorithm is or how much data you have about the people\n          or things you're trying to predict, there appear to be fundamental limitations\n          to our ability to predict complex relationships over long time horizons.\n        </div>\n        <div style={styles.paragraph}>\n          Understanding these limits to prediction can be liberating: it can help us\n          avoid spending time and energy trying to predict things about the world\n          that are fundamentally unpredictable and helps us to focus on the things that are.\n          Even though most things about relational systems are impossible to predict, there\n          are a few notable exceptions that can give us insight into the long-term\n          path that relationships will take.\n        </div>\n\n        {\n          //Text on Relational Optimization\n        }\n        <h3>Is measuring relationships useful, and if so how?</h3>\n        <div style={styles.paragraph}>\n          Not yet. The framework being explored here isn't good for anything other than\n          abstract metaphore, more work is needed to see if it is capable of making\n          verifyable predictions about relational systems to a high degree of accuracy.\n          If it can, then it opens several intriguing possibilities.\n        </div>\n        <div style={styles.paragraph}>\n          Right now we live in a world where it's hard to turn money into relationships.\n          We can turn money into other complicated things like airplanes, power plants, and\n          rock concerts, but it's challenging to financially invest in human connection.\n          It's not that we don't know how: many artists, community organizers, and\n          facilitators excel at creating human connection, but it's often difficult\n          for them to get paid for their skilled labor.\n        </div>\n        <div style={styles.paragraph}>\n          This is because it's hard to invest in things that aren't measurable.\n          If I want to invest a million dollars in relationship building, how do I\n          know who to give it to or what to give it to them for? Relationships have\n          a wide range of benefits that make them worth investing in: they improve health and happiness,\n          they increase resilience and innovation, they prevent violence and improve neighborhoods.\n          But because relationships are intrinsically unpredictable we can't invest in them\n          hoping that a specific good thing will happen. We have to invest knowing that doing so\n          will lead to unpredictably good things happening. Without a specific predictable outcome\n          to measure it is extremely difficult to know if a particular investment in\n          relationship building has been effective, which means that the market for\n          relational labor largely runs on inspiring storytelling and personal trust.\n          This is how the market for medical services worked before the advent of\n          rigorous medical science.\n        </div>\n        <div style={styles.paragraph}>\n          What if that changed? What if it became straightforward to measure when relationships\n          were forming and to invest time and money in the best possible strategies for\n          forming them? Imagine that I could take my million dollars, define a particular\n          kind of relationship I was interested in forming, and automatically divide it up in\n          small chunks to the people most effective at buildling that class of relationship.\n          Imagine that the people building those relationships could take my money and\n          invest in scientifically proven strategies for making relationships happen,\n          all while collecting relational data to improve our scientific understanding\n          of how relationships work.\n        </div>\n        <div style={styles.paragraph}>\n          The result would be a world where well-compensated experts and the systems that they\n          have designed would be available to help anyone create any kind of relationship\n          that they want within the bounds of the law. People looking for intimacy would\n          be able to choose the kind of intimacy that they wanted and participate within\n          systems that produce it as reliably as a well-tended garden produces food. People who\n          wanted to be able to drive collaboration between disciplines or build learning communities for kids or\n          set the conditions for creative work would be able to do so with the degree\n          of certainty that we now have about performing medical procedures or\n          sending people to space.\n        </div>\n        <div style={styles.paragraph}>\n          A methodology for measuring and predicting relationship formation can transform\n          our schools, our workplaces, and our civic institutions in the way that the\n          methodology for turning information into bits has transformed our libraries, our newspapers\n          and our concert halls. Such transformation has deep ethical implications, and would\n          require new frameworks for regulation and governance even as it transforms the\n          ones that we have.\n        </div>\n        <h3>Who are you?</h3>\n        <div style={styles.paragraph}>\n          My name is David Jay, I'm a <a href=\"https://medium.com/s/story/relationship-machines-675305924d5\">community organizer</a>\n          and <a href=\"https://medium.com/the-establishment/my-path-to-becoming-a-third-parent-41b823809c14\">coparent</a>\n          with a background in physics and sociology. I've spent a good chunk of my life\n          building software that builds social movements and exploring what the word \"relationship\"\n          means through an <a href=\"https://asexuality.org\">asexual</a> lens.\n          Exploring mathematical properties of relationship and their impications is a hobby of mine.\n        </div>\n        <div style={styles.paragraph}>\n          I'm happy to discuss this work, especially with people interested in exploring\n          properties of relationality or doing adjacent work that might inform mine.\n          Critiques that can move my thinking forward are welcome as well!\n        </div>\n        <div style={styles.paragraph}>\n          I am reachable at relationalityxyz at gmail dot com.\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default App\n\nconst styles = {\n  pageContainer: {\n    width: 'calc(100%-40px)',\n    padding: 20,\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    paddingBottom: 80,\n    fontFamily: 'Montserrat'\n  },\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    maxWidth: 900,\n    textAlign: 'center'\n  },\n  explainer: {\n    fontStyle: 'italic',\n    color: 'grey'\n  },\n  paragraph: {\n    fontSize: 14,\n    textAlign: 'left',\n    padding: 10\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}