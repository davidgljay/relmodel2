{"version":3,"sources":["styles/colors.js","relmodel.js","components/RelCircle.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","blue","RelModel","length","_this","this","colorCoefficient","arguments","undefined","numDice","Object","classCallCheck","nodes","bits","dice","diceIndex","i","stability","color","Math","random","targets","Array","from","sum","max","j","normalize","node","entropy","forEach","t","abs","log1p","step","console","error","diceRoll","counter","push","source","target","complete","bitStep","filter","bit","similarity","colorShift","RelCircle","props","possibleConstructorReturn","getPrototypeOf","call","state","relModel","numNodes","relIndex","stepTimer","bitTimer","getPosition","n","_this$props","height","width","radius","center","x","sin","PI","y","cos","runStep","_this$state","setState","runBits","restart","_assertThisInitialize","assertThisInitialized","clearInterval","setInterval","prevProps","prevState","_this2","_this$props2","_this$state2","react_default","a","createElement","id","xmlns","xmlnsXlink","map","_ref","_this2$getPosition","key","style","fill","concat","opacity","cx","cy","r","bitPlacement","Component","App","handleSlider","e","v","log","className","styles","container","components_RelCircle","sliderContainer","Slider","value","aria-labelledby","onChange","min","display","alignItems","flexDirection","textAlign","margin","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mIAAAA,EAAOC,QAAU,CACfC,KAAM,+ICDaC,SAEnB,SAAAA,EAAaC,GAA4C,IAAAC,EAAAC,KAApCC,EAAoCC,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAjB,GAAIE,EAAaF,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAAGG,OAAAC,EAAA,EAAAD,CAAAL,KAAAH,GACvDG,KAAKO,MAAQ,GACbP,KAAKQ,KAAO,GACZR,KAAKS,KAAO,GACZT,KAAKU,UAAY,EAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAQa,IAC1BX,KAAKO,MAAMI,GAAK,CACdC,UAAW,EACXC,MAAuB,IAAhBC,KAAKC,SACZC,QAASC,MAAMC,KAAK,CAACpB,UAAS,iBAAM,KACpCqB,IAAK,GAAKrB,EACVsB,IAAK,IAIT,IAAK,IAAIC,EAAE,EAAGA,EAAIjB,EAASiB,IACzBrB,KAAKS,KAAKY,GAAKP,KAAKC,SAGtBf,KAAKsB,UAAY,SAACC,GAChB,IAAIJ,EAAM,EACVI,EAAKH,IAAM,EACXG,EAAKC,QAAU,EACfD,EAAKP,QAAQS,QAAQ,SAAAC,GAAC,OAAIP,GAAOO,IACjC,IAAK,IAAIf,EAAI,EAAGA,EAAIb,EAAQa,IAC1BY,EAAKP,QAAQL,GAAKY,EAAKP,QAAQL,GAAGQ,EAClCI,EAAKC,SAAWV,KAAKa,IAAIb,KAAKc,MAAML,EAAKP,QAAQL,KAC7CY,EAAKP,QAAQL,GAAKY,EAAKH,MACzBG,EAAKH,IAAMG,EAAKP,QAAQL,KAK9BX,KAAK6B,KAAO,SAAClB,GACX,IAAMY,EAAOxB,EAAKQ,MAAMI,GACnBY,GACHO,QAAQC,MAAM,kBAIhB,IAEIV,EAFEW,EAAWjC,EAAKW,WAAaX,EAAKU,KAAKX,OAASgB,KAAKC,SAAWhB,EAAKU,KAAKV,EAAKW,WACrFX,EAAKW,YAEL,IAAIuB,EAAU,EACd,IAAKZ,EAAI,EAAGA,EAAIvB,EAAS,MACvBmC,GAAWV,EAAKP,QAAQK,IACVW,GAAYrB,IAAMU,GAFNA,KAMxBV,IAAIU,IACNA,EAAI,GAENtB,EAAKS,KAAK0B,KAAK,CACbC,OAAQxB,EACRyB,OAAQf,EACRR,MAAOU,EAAKV,MACZwB,SAAU,KAIdrC,KAAKsC,QAAU,WACbvC,EAAKS,KAAOT,EAAKS,KAAK+B,OAAO,SAAAC,GAAG,OAAIA,EAAIH,SAAW,MACnD,IAAK,IAAI1B,EAAI,EAAGA,EAAIZ,EAAKS,KAAKV,OAAQa,IAAK,CACzC,IAAM6B,EAAMzC,EAAKS,KAAKG,GAEtB,GADA6B,EAAIH,UAAY,EACK,MAAjBG,EAAIH,SAAkB,CACxB,IAAMI,EAAa,IAAM3B,KAAKa,IAAIa,EAAI3B,MAAQd,EAAKQ,MAAMiC,EAAIJ,QAAQvB,OAASZ,EAC9EF,EAAKQ,MAAMiC,EAAIJ,QAAQpB,QAAQwB,EAAIL,SAAWM,EAAW,IACzD1C,EAAKuB,UAAUvB,EAAKQ,MAAMiC,EAAIJ,SAC9B,IAAMM,GAAcF,EAAI3B,MAAQd,EAAKQ,MAAMiC,EAAIJ,QAAQvB,OAAO,EAC5DC,KAAKa,IAAIa,EAAI3B,MAAQd,EAAKQ,MAAMiC,EAAIJ,QAAQvB,OAAO,IACrDd,EAAKQ,MAAMiC,EAAIJ,QAAQvB,OAASd,EAAKQ,MAAMiC,EAAIJ,QAAQvB,MAAQ6B,GAAc,SC8BxEC,cAnGb,SAAAA,EAAYC,GAAO,IAAA7C,EAAA,OAAAM,OAAAC,EAAA,EAAAD,CAAAL,KAAA2C,IACjB5C,EAAAM,OAAAwC,EAAA,EAAAxC,CAAAL,KAAAK,OAAAyC,EAAA,EAAAzC,CAAAsC,GAAAI,KAAA/C,KAAM4C,KAEDI,MAAQ,CACXC,SAAU,IAAIpD,EAAS+C,EAAMM,UAC7BC,SAAU,EACVC,UAAW,KACXC,SAAU,KACV7C,KAAM,IAGRT,EAAKuD,YAAc,SAACC,GAAM,IAAAC,EACkBzD,EAAK6C,MAAxCa,EADiBD,EACjBC,OAAQC,EADSF,EACTE,MAAOC,EADEH,EACFG,OAAQT,EADNM,EACMN,SACxBU,EACDF,EAAM,EADLE,EAEDH,EAAO,EAEZ,MAAO,CACLI,EAAG/C,KAAKgD,IAAK,EAAIhD,KAAKiD,GAAKR,EAAEL,GAAaS,EAASC,EACnDI,EAAGlD,KAAKmD,IAAK,EAAInD,KAAKiD,GAAKR,EAAEL,GAAYS,EAASC,IAItD7D,EAAKmE,QAAU,WAAM,IACZhB,EAAYnD,EAAK6C,MAAjBM,SADYiB,EAEUpE,EAAKiD,MAA3BC,EAFYkB,EAEZlB,SAAUE,EAFEgB,EAEFhB,SACjBF,EAASpB,KAAKsB,GACdpD,EAAKqE,SAAS,CAACjB,UAAWA,EAAW,GAAKD,KAG5CnD,EAAKsE,QAAU,WAAM,IACZpB,EAAYlD,EAAKiD,MAAjBC,SACPA,EAASX,UACTvC,EAAKqE,SAAS,CAAC5D,KAAMyC,EAASzC,QAGhCT,EAAKuE,QAAU,SAACpB,GAAa,IAAAqB,EAAAlE,OAAAmE,EAAA,EAAAnE,CAAAN,GACpBmE,EADoBK,EACpBL,QAASG,EADWE,EACXF,QAChBI,cAAc1E,EAAKiD,MAAMI,WACzBqB,cAAc1E,EAAKiD,MAAMK,UACzB,IAAMD,EAAYsB,YAAYR,EAAS,IACjCb,EAAWqB,YAAYL,EAAS,IACtCtE,EAAKqE,SAAS,CACZnB,SAAU,IAAIpD,EAASE,EAAK6C,MAAMM,UAClCE,YACAC,WACAF,SAAU,EACV3C,KAAM,MA/COT,mFAoDjBC,KAAKsE,QAAQtE,KAAK4C,MAAMM,qDAGPyB,EAAWC,GACxBD,EAAUzB,WAAalD,KAAK4C,MAAMM,UACpClD,KAAKsE,QAAQtE,KAAK4C,MAAMM,yDAK1BuB,cAAczE,KAAKgD,MAAMI,WACzBqB,cAAczE,KAAKgD,MAAMK,2CAGjB,IAAAwB,EAAA7E,KAAA8E,EACgB9E,KAAK4C,MAAtBa,EADCqB,EACDrB,OAAQC,EADPoB,EACOpB,MADPqB,EAEiB/E,KAAKgD,MAAvBC,EAFC8B,EAED9B,SAAUzC,EAFTuE,EAESvE,KACjB,OAAOwE,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACNzB,MAAOA,EACPD,OAAQA,EACR2B,MAAM,6BACNC,WAAW,gCAETpC,EAAS1C,MAAM+E,IAAI,SAAAC,EAAe5E,GAAM,IAAnBE,EAAmB0E,EAAnB1E,MAAOO,EAAYmE,EAAZnE,IAAYoE,EACxBX,EAAKvB,YAAY3C,GAAxBkD,EAD+B2B,EAC/B3B,EAAEG,EAD6BwB,EAC7BxB,EACT,OAAOgB,EAAAC,EAAAC,cAAA,UAAQO,IAAK9E,EAAG+E,MAAO,CAACC,KAAI,OAAAC,OAAQ/E,EAAR,gBAA6BgF,QAASzE,GAAM0E,GAAIjC,EAAGkC,GAAI/B,EAAGgC,EAAE,SAIjGxF,EAAK8E,IAAI,SAAC9C,EAAK7B,GACb,IAAMwB,EAAS0C,EAAKvB,YAAYd,EAAIL,QAC9BC,EAASyC,EAAKvB,YAAYd,EAAIJ,QAC9BhB,EAAM6B,EAAS1C,MAAMiC,EAAIL,QAAQf,IACjC6E,EAAe,CACnBpC,EAAG1B,EAAO0B,GAAKzB,EAAOyB,EAAI1B,EAAO0B,GAAKrB,EAAIH,SAAS,IACnD2B,EAAG7B,EAAO6B,GAAK5B,EAAO4B,EAAI7B,EAAO6B,GAAKxB,EAAIH,SAAS,KAErD,OAAO2C,EAAAC,EAAAC,cAAA,UAAQO,IAAK,MAAQ9E,EAAG+E,MAAO,CAACC,KAAI,OAAAC,OAAQpD,EAAI3B,MAAZ,gBAAiCgF,QAASzE,GAAM0E,GAAIG,EAAapC,EAAGkC,GAAIE,EAAajC,EAAGgC,EAAE,iBA5FzHE,qBCmCTC,cAjCb,SAAAA,EAAYvD,GAAO,IAAA7C,EAAA,OAAAM,OAAAC,EAAA,EAAAD,CAAAL,KAAAmG,IACjBpG,EAAAM,OAAAwC,EAAA,EAAAxC,CAAAL,KAAAK,OAAAyC,EAAA,EAAAzC,CAAA8F,GAAApD,KAAA/C,KAAM4C,KACDI,MAAQ,CACXE,SAAU,IAGZnD,EAAKqG,aAAe,SAACC,EAAGC,GACtBxE,QAAQyE,IAAIF,EAAEC,GACdvG,EAAKqE,SAAS,CAAClB,SAAUoD,KARVvG,wEAYT,IACDmD,EAAYlD,KAAKgD,MAAjBE,SACP,OAAO8B,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,MAAMd,MAAOe,EAAOC,WACxC1B,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,mHACAF,EAAAC,EAAAC,cAACyB,EAAD,CAAWlD,OAAO,MAAMC,MAAM,MAAMR,SAAUA,EAAUS,OAAQ,MAChEqB,EAAAC,EAAAC,cAAA,OAAKQ,MAAOe,EAAOG,iBACjB5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEL,UAAU,SACVM,MAAO5D,EACP6D,kBAAgB,kBAChBC,SAAUhH,KAAKoG,aACfa,IAAK,EACL7F,IAAK,GACLS,KAAM,aA5BEqE,aAqCZO,EAAS,CACbC,UAAW,CACTQ,QAAS,OACTC,WAAY,SACZC,cAAe,SACf1D,MAAO,OACP2D,UAAW,UAEbT,gBAAiB,CACflD,MAAO,IACP4D,OAAQ,KCvCQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.71b40a6d.chunk.js","sourcesContent":["module.exports = {\n  blue: '#0000ff'\n}\n","export default class RelModel {\n\n  constructor (length, colorCoefficient = .1, numDice = 1) {\n    this.nodes = []\n    this.bits = []\n    this.dice = []\n    this.diceIndex = 0\n\n    for (var i = 0; i < length; i++) {\n      this.nodes[i] = {\n        stability: 0,\n        color: Math.random() * 360,\n        targets: Array.from({length}, () => 0.1),\n        sum: .1 * length,\n        max: .1\n      }\n    }\n\n    for (var j=0; j < numDice; j++) {\n      this.dice[j] = Math.random()\n    }\n\n    this.normalize = (node) => {\n      let sum = 0\n      node.max = 0\n      node.entropy = 0\n      node.targets.forEach(t => sum += t)\n      for (var i = 0; i < length; i++) {\n        node.targets[i] = node.targets[i]/sum\n        node.entropy += Math.abs(Math.log1p(node.targets[i]))\n        if (node.targets[i] > node.max) {\n          node.max = node.targets[i]\n        }\n      }\n    }\n\n    this.step = (i) => {\n      const node = this.nodes[i]\n      if (!node) {\n        console.error('Node not found');\n        debugger;\n      }\n\n      const diceRoll = this.diceIndex >= this.dice.length ? Math.random() : this.dice[this.diceIndex]\n      this.diceIndex++\n      var j\n      var counter = 0\n      for (j = 0; j < length - 1; j++) {\n        counter += node.targets[j]\n        if (counter > diceRoll && i !== j) {\n          break;\n        }\n      }\n      if (i===j) {\n        j = 0\n      }\n      this.bits.push({\n        source: i,\n        target: j,\n        color: node.color,\n        complete: 0\n      })\n    }\n\n    this.bitStep = () => {\n      this.bits = this.bits.filter(bit => bit.complete < 100)\n      for (var i = 0; i < this.bits.length; i++) {\n        const bit = this.bits[i]\n        bit.complete += 1\n        if (bit.complete === 100) {\n          const similarity = 360 - Math.abs(bit.color - this.nodes[bit.target].color) * colorCoefficient\n          this.nodes[bit.target].targets[bit.source] += similarity/500\n          this.normalize(this.nodes[bit.target])\n          const colorShift = (bit.color - this.nodes[bit.target].color)/2 *\n            Math.abs(bit.color - this.nodes[bit.target].color)/100\n          this.nodes[bit.target].color = (this.nodes[bit.target].color + colorShift) % 360\n        }\n      }\n    }\n  }\n}\n","import React, {Component} from 'react'\nimport {blue} from '../styles/colors'\nimport RelModel from '../relmodel'\n\nclass RelCircle extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      relModel: new RelModel(props.numNodes),\n      relIndex: 0,\n      stepTimer: null,\n      bitTimer: null,\n      bits: []\n    }\n\n    this.getPosition = (n) => {\n      const {height, width, radius, numNodes} = this.props\n      const center = {\n        x: width/2,\n        y: height/2\n      }\n      return {\n        x: Math.sin( 2 * Math.PI * n/numNodes ) * radius + center.x,\n        y: Math.cos( 2 * Math.PI * n/numNodes) * radius + center.y\n      }\n    }\n\n    this.runStep = () => {\n      const {numNodes} = this.props\n      const {relModel, relIndex} = this.state\n      relModel.step(relIndex)\n      this.setState({relIndex: (relIndex + 1) % numNodes})\n    }\n\n    this.runBits = () => {\n      const {relModel} = this.state\n      relModel.bitStep()\n      this.setState({bits: relModel.bits})\n    }\n\n    this.restart = (numNodes) => {\n      const {runStep, runBits} = this\n      clearInterval(this.state.stepTimer)\n      clearInterval(this.state.bitTimer)\n      const stepTimer = setInterval(runStep, 40)\n      const bitTimer = setInterval(runBits, 20)\n      this.setState({\n        relModel: new RelModel(this.props.numNodes),\n        stepTimer,\n        bitTimer,\n        relIndex: 0,\n        bits: []})\n    }\n  }\n\n  componentDidMount() {\n    this.restart(this.props.numNodes)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.numNodes !== this.props.numNodes) {\n      this.restart(this.props.numNodes)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.stepTimer)\n    clearInterval(this.state.bitTimer)\n  }\n\n  render () {\n    const {height, width} = this.props\n    const {relModel, bits} = this.state\n    return <div>\n      <svg id=\"visualization\"\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        {\n          relModel.nodes.map(({color, max}, i) => {\n            const {x,y} = this.getPosition(i)\n            return <circle key={i} style={{fill:`hsl(${color}, 100%, 50%)`, opacity: max}} cx={x} cy={y} r=\"10\"/>\n          })\n        }\n        {\n          bits.map((bit, i) => {\n            const source = this.getPosition(bit.source)\n            const target = this.getPosition(bit.target)\n            const max = relModel.nodes[bit.source].max\n            const bitPlacement = {\n              x: source.x + (target.x - source.x) * bit.complete/100,\n              y: source.y + (target.y - source.y) * bit.complete/100\n            }\n            return <circle key={'bit' + i} style={{fill:`hsl(${bit.color}, 100%, 50%)`, opacity: max}} cx={bitPlacement.x} cy={bitPlacement.y} r=\"2\"/>\n          })\n        }\n\n      </svg>\n    </div>\n  }\n}\n\nexport default RelCircle;\n","import React, {Component} from 'react'\nimport RelCircle from './RelCircle'\nimport Slider from '@material-ui/lab/Slider';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      numNodes: 10\n    }\n\n    this.handleSlider = (e, v) => {\n      console.log(e,v);\n      this.setState({numNodes: v})\n    }\n  }\n\n  render () {\n    const {numNodes} = this.state\n    return <div className=\"App\" style={styles.container}>\n      <h1>Colored Edgeless Network</h1>\n      <p>Nodes ignore colors that are far from them on the spectrum and shift towards colors that they receive.</p>\n      <RelCircle height='350' width='350' numNodes={numNodes} radius={150}/>\n      <div style={styles.sliderContainer}>\n        <Slider\n          className='slider'\n          value={numNodes}\n          aria-labelledby=\"Number of Nodes\"\n          onChange={this.handleSlider}\n          min={2}\n          max={50}\n          step={1}\n        />\n      </div>\n    </div>\n  }\n}\n\nexport default App\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: '100%',\n    textAlign: 'center'\n  },\n  sliderContainer: {\n    width: 300,\n    margin: 30\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}